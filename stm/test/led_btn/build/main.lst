ARM GAS  /tmp/ccwzBaRd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB133:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  /tmp/ccwzBaRd.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** UART_HandleTypeDef huart2;
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN PV */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  51:Src/main.c    **** void SystemClock_Config(void);
  52:Src/main.c    **** static void MX_GPIO_Init(void);
  53:Src/main.c    **** static void MX_USART2_UART_Init(void);
  54:Src/main.c    **** /* USER CODE BEGIN PFP */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  59:Src/main.c    **** /* USER CODE BEGIN 0 */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END 0 */
  62:Src/main.c    **** 
  63:Src/main.c    **** /**
  64:Src/main.c    ****   * @brief  The application entry point.
  65:Src/main.c    ****   * @retval int
  66:Src/main.c    ****   */
  67:Src/main.c    **** int main(void)
  68:Src/main.c    **** {
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
  70:Src/main.c    **** 
  71:Src/main.c    ****   /* USER CODE END 1 */
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Src/main.c    ****   HAL_Init();
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE BEGIN Init */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END Init */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* Configure the system clock */
  83:Src/main.c    ****   SystemClock_Config();
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END SysInit */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccwzBaRd.s 			page 3


  90:Src/main.c    ****   MX_GPIO_Init();
  91:Src/main.c    ****   MX_USART2_UART_Init();
  92:Src/main.c    ****   /* USER CODE BEGIN 2 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 2 */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* Infinite loop */
  97:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  98:Src/main.c    ****   while (1)
  99:Src/main.c    ****   {
 100:Src/main.c    ****     /* USER CODE END WHILE */
 101:Src/main.c    **** 
 102:Src/main.c    ****     /* USER CODE BEGIN 3 */
 103:Src/main.c    ****     if (HAL_GPIO_ReadPin(B1_GPIO_Port, B1_Pin) == GPIO_PIN_SET){
 104:Src/main.c    ****         HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET) ; 
 105:Src/main.c    ****     }
 106:Src/main.c    ****     else {
 107:Src/main.c    ****         HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin) ; 
 108:Src/main.c    ****         HAL_Delay(500) ;
 109:Src/main.c    ****         HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin) ; 
 110:Src/main.c    ****         HAL_Delay(500) ;
 111:Src/main.c    ****     }
 112:Src/main.c    ****   }
 113:Src/main.c    ****   /* USER CODE END 3 */
 114:Src/main.c    **** }
 115:Src/main.c    **** 
 116:Src/main.c    **** /**
 117:Src/main.c    ****   * @brief System Clock Configuration
 118:Src/main.c    ****   * @retval None
 119:Src/main.c    ****   */
 120:Src/main.c    **** void SystemClock_Config(void)
 121:Src/main.c    **** {
 122:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 123:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 124:Src/main.c    **** 
 125:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 126:Src/main.c    ****   */
 127:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 128:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 129:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 130:Src/main.c    ****   */
 131:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 132:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 133:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 139:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 140:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 141:Src/main.c    ****   {
 142:Src/main.c    ****     Error_Handler();
 143:Src/main.c    ****   }
 144:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 145:Src/main.c    ****   */
 146:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /tmp/ccwzBaRd.s 			page 4


 147:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 149:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 151:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152:Src/main.c    **** 
 153:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 154:Src/main.c    ****   {
 155:Src/main.c    ****     Error_Handler();
 156:Src/main.c    ****   }
 157:Src/main.c    **** }
 158:Src/main.c    **** 
 159:Src/main.c    **** /**
 160:Src/main.c    ****   * @brief USART2 Initialization Function
 161:Src/main.c    ****   * @param None
 162:Src/main.c    ****   * @retval None
 163:Src/main.c    ****   */
 164:Src/main.c    **** static void MX_USART2_UART_Init(void)
 165:Src/main.c    **** {
 166:Src/main.c    **** 
 167:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 168:Src/main.c    **** 
 169:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 170:Src/main.c    **** 
 171:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 172:Src/main.c    **** 
 173:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 174:Src/main.c    ****   huart2.Instance = USART2;
 175:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 176:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 177:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 178:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 179:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 180:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 181:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 182:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 183:Src/main.c    ****   {
 184:Src/main.c    ****     Error_Handler();
 185:Src/main.c    ****   }
 186:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 187:Src/main.c    **** 
 188:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 189:Src/main.c    **** 
 190:Src/main.c    **** }
 191:Src/main.c    **** 
 192:Src/main.c    **** /**
 193:Src/main.c    ****   * @brief GPIO Initialization Function
 194:Src/main.c    ****   * @param None
 195:Src/main.c    ****   * @retval None
 196:Src/main.c    ****   */
 197:Src/main.c    **** static void MX_GPIO_Init(void)
 198:Src/main.c    **** {
  27              		.loc 1 198 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/ccwzBaRd.s 			page 5


  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
 199:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 199 0
  41 0004 0024     		movs	r4, #0
  42 0006 0594     		str	r4, [sp, #20]
  43 0008 0694     		str	r4, [sp, #24]
  44 000a 0794     		str	r4, [sp, #28]
  45 000c 0894     		str	r4, [sp, #32]
  46 000e 0994     		str	r4, [sp, #36]
  47              	.LBB2:
 200:Src/main.c    **** 
 201:Src/main.c    ****   /* GPIO Ports Clock Enable */
 202:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 202 0
  49 0010 0194     		str	r4, [sp, #4]
  50 0012 224B     		ldr	r3, .L3
  51 0014 1A6B     		ldr	r2, [r3, #48]
  52 0016 42F00402 		orr	r2, r2, #4
  53 001a 1A63     		str	r2, [r3, #48]
  54 001c 1A6B     		ldr	r2, [r3, #48]
  55 001e 02F00402 		and	r2, r2, #4
  56 0022 0192     		str	r2, [sp, #4]
  57 0024 019A     		ldr	r2, [sp, #4]
  58              	.LBE2:
  59              	.LBB3:
 203:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  60              		.loc 1 203 0
  61 0026 0294     		str	r4, [sp, #8]
  62 0028 1A6B     		ldr	r2, [r3, #48]
  63 002a 42F08002 		orr	r2, r2, #128
  64 002e 1A63     		str	r2, [r3, #48]
  65 0030 1A6B     		ldr	r2, [r3, #48]
  66 0032 02F08002 		and	r2, r2, #128
  67 0036 0292     		str	r2, [sp, #8]
  68 0038 029A     		ldr	r2, [sp, #8]
  69              	.LBE3:
  70              	.LBB4:
 204:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  71              		.loc 1 204 0
  72 003a 0394     		str	r4, [sp, #12]
  73 003c 1A6B     		ldr	r2, [r3, #48]
  74 003e 42F00102 		orr	r2, r2, #1
  75 0042 1A63     		str	r2, [r3, #48]
  76 0044 1A6B     		ldr	r2, [r3, #48]
  77 0046 02F00102 		and	r2, r2, #1
  78 004a 0392     		str	r2, [sp, #12]
  79 004c 039A     		ldr	r2, [sp, #12]
  80              	.LBE4:
  81              	.LBB5:
 205:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
ARM GAS  /tmp/ccwzBaRd.s 			page 6


  82              		.loc 1 205 0
  83 004e 0494     		str	r4, [sp, #16]
  84 0050 1A6B     		ldr	r2, [r3, #48]
  85 0052 42F00202 		orr	r2, r2, #2
  86 0056 1A63     		str	r2, [r3, #48]
  87 0058 1B6B     		ldr	r3, [r3, #48]
  88 005a 03F00203 		and	r3, r3, #2
  89 005e 0493     		str	r3, [sp, #16]
  90 0060 049B     		ldr	r3, [sp, #16]
  91              	.LBE5:
 206:Src/main.c    **** 
 207:Src/main.c    ****   /*Configure GPIO pin Output Level */
 208:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
  92              		.loc 1 208 0
  93 0062 0F4D     		ldr	r5, .L3+4
  94 0064 2246     		mov	r2, r4
  95 0066 2021     		movs	r1, #32
  96 0068 2846     		mov	r0, r5
  97 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL0:
 209:Src/main.c    **** 
 210:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 211:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
  99              		.loc 1 211 0
 100 006e 4FF40053 		mov	r3, #8192
 101 0072 0593     		str	r3, [sp, #20]
 212:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 102              		.loc 1 212 0
 103 0074 0B4B     		ldr	r3, .L3+8
 104 0076 0693     		str	r3, [sp, #24]
 213:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 105              		.loc 1 213 0
 106 0078 0794     		str	r4, [sp, #28]
 214:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 107              		.loc 1 214 0
 108 007a 05A9     		add	r1, sp, #20
 109 007c 0A48     		ldr	r0, .L3+12
 110 007e FFF7FEFF 		bl	HAL_GPIO_Init
 111              	.LVL1:
 215:Src/main.c    **** 
 216:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 217:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
 112              		.loc 1 217 0
 113 0082 2023     		movs	r3, #32
 114 0084 0593     		str	r3, [sp, #20]
 218:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 115              		.loc 1 218 0
 116 0086 0123     		movs	r3, #1
 117 0088 0693     		str	r3, [sp, #24]
 219:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 118              		.loc 1 219 0
 119 008a 0794     		str	r4, [sp, #28]
 220:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 120              		.loc 1 220 0
 121 008c 0894     		str	r4, [sp, #32]
 221:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 122              		.loc 1 221 0
ARM GAS  /tmp/ccwzBaRd.s 			page 7


 123 008e 05A9     		add	r1, sp, #20
 124 0090 2846     		mov	r0, r5
 125 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL2:
 222:Src/main.c    **** 
 223:Src/main.c    **** }
 127              		.loc 1 223 0
 128 0096 0BB0     		add	sp, sp, #44
 129              	.LCFI2:
 130              		.cfi_def_cfa_offset 12
 131              		@ sp needed
 132 0098 30BD     		pop	{r4, r5, pc}
 133              	.L4:
 134 009a 00BF     		.align	2
 135              	.L3:
 136 009c 00380240 		.word	1073887232
 137 00a0 00000240 		.word	1073872896
 138 00a4 00002110 		.word	270598144
 139 00a8 00080240 		.word	1073874944
 140              		.cfi_endproc
 141              	.LFE133:
 143              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 144              		.align	1
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	MX_USART2_UART_Init:
 151              	.LFB132:
 165:Src/main.c    **** 
 152              		.loc 1 165 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156 0000 08B5     		push	{r3, lr}
 157              	.LCFI3:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 3, -8
 160              		.cfi_offset 14, -4
 174:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 161              		.loc 1 174 0
 162 0002 0848     		ldr	r0, .L7
 163 0004 084B     		ldr	r3, .L7+4
 164 0006 0360     		str	r3, [r0]
 175:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 165              		.loc 1 175 0
 166 0008 4FF4E133 		mov	r3, #115200
 167 000c 4360     		str	r3, [r0, #4]
 176:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 168              		.loc 1 176 0
 169 000e 0023     		movs	r3, #0
 170 0010 8360     		str	r3, [r0, #8]
 177:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 171              		.loc 1 177 0
 172 0012 C360     		str	r3, [r0, #12]
 178:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 173              		.loc 1 178 0
ARM GAS  /tmp/ccwzBaRd.s 			page 8


 174 0014 0361     		str	r3, [r0, #16]
 179:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 175              		.loc 1 179 0
 176 0016 0C22     		movs	r2, #12
 177 0018 4261     		str	r2, [r0, #20]
 180:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 178              		.loc 1 180 0
 179 001a 8361     		str	r3, [r0, #24]
 181:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 180              		.loc 1 181 0
 181 001c C361     		str	r3, [r0, #28]
 182:Src/main.c    ****   {
 182              		.loc 1 182 0
 183 001e FFF7FEFF 		bl	HAL_UART_Init
 184              	.LVL3:
 185 0022 08BD     		pop	{r3, pc}
 186              	.L8:
 187              		.align	2
 188              	.L7:
 189 0024 00000000 		.word	huart2
 190 0028 00440040 		.word	1073759232
 191              		.cfi_endproc
 192              	.LFE132:
 194              		.section	.text.SystemClock_Config,"ax",%progbits
 195              		.align	1
 196              		.global	SystemClock_Config
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu fpv4-sp-d16
 202              	SystemClock_Config:
 203              	.LFB131:
 121:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 204              		.loc 1 121 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 80
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 30B5     		push	{r4, r5, lr}
 209              	.LCFI4:
 210              		.cfi_def_cfa_offset 12
 211              		.cfi_offset 4, -12
 212              		.cfi_offset 5, -8
 213              		.cfi_offset 14, -4
 214 0002 95B0     		sub	sp, sp, #84
 215              	.LCFI5:
 216              		.cfi_def_cfa_offset 96
 122:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 217              		.loc 1 122 0
 218 0004 3022     		movs	r2, #48
 219 0006 0021     		movs	r1, #0
 220 0008 08A8     		add	r0, sp, #32
 221 000a FFF7FEFF 		bl	memset
 222              	.LVL4:
 123:Src/main.c    **** 
 223              		.loc 1 123 0
 224 000e 0024     		movs	r4, #0
 225 0010 0394     		str	r4, [sp, #12]
ARM GAS  /tmp/ccwzBaRd.s 			page 9


 226 0012 0494     		str	r4, [sp, #16]
 227 0014 0594     		str	r4, [sp, #20]
 228 0016 0694     		str	r4, [sp, #24]
 229 0018 0794     		str	r4, [sp, #28]
 230              	.LBB6:
 127:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 231              		.loc 1 127 0
 232 001a 0194     		str	r4, [sp, #4]
 233 001c 1B4B     		ldr	r3, .L11
 234 001e 1A6C     		ldr	r2, [r3, #64]
 235 0020 42F08052 		orr	r2, r2, #268435456
 236 0024 1A64     		str	r2, [r3, #64]
 237 0026 1B6C     		ldr	r3, [r3, #64]
 238 0028 03F08053 		and	r3, r3, #268435456
 239 002c 0193     		str	r3, [sp, #4]
 240 002e 019B     		ldr	r3, [sp, #4]
 241              	.LBE6:
 242              	.LBB7:
 128:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 243              		.loc 1 128 0
 244 0030 0294     		str	r4, [sp, #8]
 245 0032 174A     		ldr	r2, .L11+4
 246 0034 1368     		ldr	r3, [r2]
 247 0036 23F44043 		bic	r3, r3, #49152
 248 003a 43F40043 		orr	r3, r3, #32768
 249 003e 1360     		str	r3, [r2]
 250 0040 1368     		ldr	r3, [r2]
 251 0042 03F44043 		and	r3, r3, #49152
 252 0046 0293     		str	r3, [sp, #8]
 253 0048 029B     		ldr	r3, [sp, #8]
 254              	.LBE7:
 131:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 255              		.loc 1 131 0
 256 004a 0225     		movs	r5, #2
 257 004c 0895     		str	r5, [sp, #32]
 132:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 258              		.loc 1 132 0
 259 004e 0123     		movs	r3, #1
 260 0050 0B93     		str	r3, [sp, #44]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 261              		.loc 1 133 0
 262 0052 1023     		movs	r3, #16
 263 0054 0C93     		str	r3, [sp, #48]
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 264              		.loc 1 134 0
 265 0056 0E95     		str	r5, [sp, #56]
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 266              		.loc 1 135 0
 267 0058 0F94     		str	r4, [sp, #60]
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 268              		.loc 1 136 0
 269 005a 1093     		str	r3, [sp, #64]
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 270              		.loc 1 137 0
 271 005c 4FF4A873 		mov	r3, #336
 272 0060 1193     		str	r3, [sp, #68]
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
ARM GAS  /tmp/ccwzBaRd.s 			page 10


 273              		.loc 1 138 0
 274 0062 0423     		movs	r3, #4
 275 0064 1293     		str	r3, [sp, #72]
 139:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 276              		.loc 1 139 0
 277 0066 0723     		movs	r3, #7
 278 0068 1393     		str	r3, [sp, #76]
 140:Src/main.c    ****   {
 279              		.loc 1 140 0
 280 006a 08A8     		add	r0, sp, #32
 281 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 282              	.LVL5:
 146:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 283              		.loc 1 146 0
 284 0070 0F23     		movs	r3, #15
 285 0072 0393     		str	r3, [sp, #12]
 148:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 286              		.loc 1 148 0
 287 0074 0495     		str	r5, [sp, #16]
 149:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 288              		.loc 1 149 0
 289 0076 0594     		str	r4, [sp, #20]
 150:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 290              		.loc 1 150 0
 291 0078 4FF48053 		mov	r3, #4096
 292 007c 0693     		str	r3, [sp, #24]
 151:Src/main.c    **** 
 293              		.loc 1 151 0
 294 007e 0794     		str	r4, [sp, #28]
 153:Src/main.c    ****   {
 295              		.loc 1 153 0
 296 0080 2946     		mov	r1, r5
 297 0082 03A8     		add	r0, sp, #12
 298 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 299              	.LVL6:
 157:Src/main.c    **** 
 300              		.loc 1 157 0
 301 0088 15B0     		add	sp, sp, #84
 302              	.LCFI6:
 303              		.cfi_def_cfa_offset 12
 304              		@ sp needed
 305 008a 30BD     		pop	{r4, r5, pc}
 306              	.L12:
 307              		.align	2
 308              	.L11:
 309 008c 00380240 		.word	1073887232
 310 0090 00700040 		.word	1073770496
 311              		.cfi_endproc
 312              	.LFE131:
 314              		.section	.text.main,"ax",%progbits
 315              		.align	1
 316              		.global	main
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	main:
ARM GAS  /tmp/ccwzBaRd.s 			page 11


 323              	.LFB130:
  68:Src/main.c    ****   /* USER CODE BEGIN 1 */
 324              		.loc 1 68 0
 325              		.cfi_startproc
 326              		@ Volatile: function does not return.
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 08B5     		push	{r3, lr}
 330              	.LCFI7:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 3, -8
 333              		.cfi_offset 14, -4
  76:Src/main.c    **** 
 334              		.loc 1 76 0
 335 0002 FFF7FEFF 		bl	HAL_Init
 336              	.LVL7:
  83:Src/main.c    **** 
 337              		.loc 1 83 0
 338 0006 FFF7FEFF 		bl	SystemClock_Config
 339              	.LVL8:
  90:Src/main.c    ****   MX_USART2_UART_Init();
 340              		.loc 1 90 0
 341 000a FFF7FEFF 		bl	MX_GPIO_Init
 342              	.LVL9:
  91:Src/main.c    ****   /* USER CODE BEGIN 2 */
 343              		.loc 1 91 0
 344 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 345              	.LVL10:
 346 0012 04E0     		b	.L14
 347              	.L18:
 104:Src/main.c    ****     }
 348              		.loc 1 104 0
 349 0014 0022     		movs	r2, #0
 350 0016 2021     		movs	r1, #32
 351 0018 0D48     		ldr	r0, .L19
 352 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 353              	.LVL11:
 354              	.L14:
 103:Src/main.c    ****         HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET) ; 
 355              		.loc 1 103 0
 356 001e 4FF40051 		mov	r1, #8192
 357 0022 0C48     		ldr	r0, .L19+4
 358 0024 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 359              	.LVL12:
 360 0028 0128     		cmp	r0, #1
 361 002a F3D0     		beq	.L18
 107:Src/main.c    ****         HAL_Delay(500) ;
 362              		.loc 1 107 0
 363 002c 084C     		ldr	r4, .L19
 364 002e 2021     		movs	r1, #32
 365 0030 2046     		mov	r0, r4
 366 0032 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 367              	.LVL13:
 108:Src/main.c    ****         HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin) ; 
 368              		.loc 1 108 0
 369 0036 4FF4FA70 		mov	r0, #500
 370 003a FFF7FEFF 		bl	HAL_Delay
ARM GAS  /tmp/ccwzBaRd.s 			page 12


 371              	.LVL14:
 109:Src/main.c    ****         HAL_Delay(500) ;
 372              		.loc 1 109 0
 373 003e 2021     		movs	r1, #32
 374 0040 2046     		mov	r0, r4
 375 0042 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 376              	.LVL15:
 110:Src/main.c    ****     }
 377              		.loc 1 110 0
 378 0046 4FF4FA70 		mov	r0, #500
 379 004a FFF7FEFF 		bl	HAL_Delay
 380              	.LVL16:
 381 004e E6E7     		b	.L14
 382              	.L20:
 383              		.align	2
 384              	.L19:
 385 0050 00000240 		.word	1073872896
 386 0054 00080240 		.word	1073874944
 387              		.cfi_endproc
 388              	.LFE130:
 390              		.section	.text.Error_Handler,"ax",%progbits
 391              		.align	1
 392              		.global	Error_Handler
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 396              		.fpu fpv4-sp-d16
 398              	Error_Handler:
 399              	.LFB134:
 224:Src/main.c    **** 
 225:Src/main.c    **** /* USER CODE BEGIN 4 */
 226:Src/main.c    **** 
 227:Src/main.c    **** /* USER CODE END 4 */
 228:Src/main.c    **** 
 229:Src/main.c    **** /**
 230:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 231:Src/main.c    ****   * @retval None
 232:Src/main.c    ****   */
 233:Src/main.c    **** void Error_Handler(void)
 234:Src/main.c    **** {
 400              		.loc 1 234 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 405 0000 7047     		bx	lr
 406              		.cfi_endproc
 407              	.LFE134:
 409              		.comm	huart2,64,4
 410              		.text
 411              	.Letext0:
 412              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 413              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 414              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 415              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 416              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 417              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
ARM GAS  /tmp/ccwzBaRd.s 			page 13


 418              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 419              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 420              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 421              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 422              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 423              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccwzBaRd.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccwzBaRd.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccwzBaRd.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccwzBaRd.s:136    .text.MX_GPIO_Init:000000000000009c $d
     /tmp/ccwzBaRd.s:144    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccwzBaRd.s:150    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccwzBaRd.s:189    .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccwzBaRd.s:195    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccwzBaRd.s:202    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccwzBaRd.s:309    .text.SystemClock_Config:000000000000008c $d
     /tmp/ccwzBaRd.s:315    .text.main:0000000000000000 $t
     /tmp/ccwzBaRd.s:322    .text.main:0000000000000000 main
     /tmp/ccwzBaRd.s:385    .text.main:0000000000000050 $d
     /tmp/ccwzBaRd.s:391    .text.Error_Handler:0000000000000000 $t
     /tmp/ccwzBaRd.s:398    .text.Error_Handler:0000000000000000 Error_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_ReadPin
HAL_GPIO_TogglePin
HAL_Delay
